1. Storage and creation of blogposts 

The posts are currently created via the provided
admin panel of django. 

It is possible to store raw HTML in the body and in the update attribute of a blogpost.
to render the HTML this syntax can be used.

{{post.body|safe}}
{{post.update|safe}}

2. Impressum

- Adapt impressum according to my own needs

3. Functionality

- Searchfunctionality
    Case insensitive search for keywords (just letters -> sanitize) in all blogposts ever made. 

- earlier month: You could click through until the beginning of time
- later: You could click through until the end of time


4. Refactor

- DRY!
    - fb_blog/views.py: get_previous_month and get_next_month look fairly similar except one uses addition and one subtractions. Both look awefully complicated for what they actually do. 

- From brute to smooth:
    - get_home_view_queryset()

- Make code self documenting

- Add method get_date to model of BlogPost

5. Test coverage

6. Styling

- Change Title: Thu Apr 25 24 to Thu Apr 25 2024
- Dark theme

7. Deployment - Virtual Machine

8. Deployment to production

-----------------------------------------

